name: Build and Deploy

on:
  push:
    branches: [ main ]

  repository_dispatch:
    types: [PAYMENT_LAMBDA_UPDATED]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout simsafari-lodge-booking-infra
      uses: actions/checkout@v3
      with:
        repository: "dvdl16/simsafari-lodge-booking-infra"
        
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'      

    - name: Build the Go backend
      working-directory: ./api
      run: |
        env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./main  src/app/*.go
        zip -j main.zip main

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install python dependencies for Login Notification Lambda
      working-directory: ./login_notifications
      run: |
        python -m venv venv-notification-lambda
        source venv-notification-lambda/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Zip the Login Notification lambda
      working-directory: ./login_notifications
      run: |
        cd venv-notification-lambda/lib/python3.9/site-packages/
        zip -r ../../../../lambda_function.zip .
        cd ../../../../
        zip -g lambda_function.zip *.py

    - name: Checkout simsafari-lodge-booking-payment-lambda
      uses: actions/checkout@v3
      with:
        repository: "dvdl16/simsafari-lodge-booking-payment-lambda"
        path: 'payment-lambda'

    - name: Install dependencies for Payment Lambda
      working-directory: ./payment-lambda
      run: |
        python -m venv venv-payment-lambda
        source venv-payment-lambda/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Zip the Payment lambda
      run: |
        cd payment-lambda/venv-payment-lambda/lib/python3.9/site-packages/
        zip -r ../../../../payments.zip .
        cd ../../../../
        zip -g payments.zip *.py
        mv payments.zip ../.
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6
      
    - name: Terraform Init and Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
        TF_VAR_aws_region: ${{ vars.AWS_REGION }}
        TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
        TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}
        TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
        TF_VAR_google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        TF_VAR_payfast_merchant_id: ${{ secrets.PAYFAST_MERCHANT_ID }}
        TF_VAR_payfast_merchant_key: ${{ secrets.PAYFAST_MERCHANT_KEY }}
        TF_VAR_payfast_onsite_url: ${{ vars.PAYFAST_ONSITE_URL }}
        TF_VAR_payfast_passphrase: ${{ secrets.PAYFAST_PASSPHRASE }}
        TF_VAR_payfast_confirmation_address: ${{ secrets.PAYFAST_CONFIRMATION_ADDRESS }}
        TF_VAR_payfast_email_confirmation: ${{ secrets.PAYFAST_EMAIL_CONFIRMATION }}
        TF_VAR_telegram_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TF_VAR_telegram_chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
        TF_VAR_project_name: ${{ secrets.PROJECT }}
        TF_VAR_mx_record_value: ${{ vars.MX_RECORD_VALUE }}
        TF_VAR_a_record_mail_value: ${{ vars.A_RECORD_MAIL_VALUE }}
        TF_VAR_dkim_record_value: ${{ secrets.DKIM_RECORD_VALUE }}
        TF_VAR_spf_record_value: ${{ vars.SPF_RECORD_MAIL_VALUE }}
        TF_VAR_cname_record_value: ${{ secrets.CNAME_RECORD_VALUE }}
      run: |
        cd tf
        terraform init
        terraform plan
        terraform apply -auto-approve
